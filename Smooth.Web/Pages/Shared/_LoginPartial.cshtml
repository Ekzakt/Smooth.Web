@using Microsoft.AspNetCore.Identity
@inject IConfiguration _configuration;

@{
    var isUserAuthenticated = User?.Identity?.IsAuthenticated ?? false;
    var userName = @User?.Claims.FirstOrDefault(c => c.Type == "given_name")?.Value;
    var authorityUri = _configuration["IdentityServer:Authority"];

    var registerUri = $"{authorityUri}/Account/Register";
    var loginUri = $"{authorityUri}/Account/Login";
    var logoutUri = $"{authorityUri}/Account/Logout";
}

<ul class="navbar-nav">

@if (isUserAuthenticated)
{
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" data-bs-toggle="dropdown" aria-expanded="false">
            @userName
        </a>
        <ul class="dropdown-menu">
            <li>
                <a class="nav-link dropdown-item" href="@logoutUri">Logout</a>
            </li>
            <li>
                <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="@logoutUri" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                    <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout (Form)</button>
                </form>
            </li>
        </ul>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" href="@registerUri">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" href="@loginUri">Login</a>
    </li>
}
</ul>
